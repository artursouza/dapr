syntax = "proto3";

package dapr.proto.scheduler.v1;

import "google/protobuf/empty.proto";
import "dapr/proto/runtime/v1/dapr.proto";

option go_package = "github.com/dapr/dapr/pkg/proto/scheduler/v1;scheduler";

service Scheduler {
	// ConnectHost is used by the daprd sidecar to connect to the scheduler service.
	rpc ConnectHost(ConnectHostRequest) returns (ConnectHostResponse) {}
	// ScheduleJob is used by the daprd sidecar to schedule a job.
	rpc ScheduleJob(ScheduleJobRequest) returns (ScheduleJobResponse) {}
	// Get a job
	rpc GetJob(GetJobRequest) returns (GetJobResponse) {}
	// DeleteJob is used by the daprd sidecar to delete a job.
	rpc DeleteJob(DeleteJobRequest) returns (DeleteJobResponse) {}
}

message ConnectHostRequest {
	// The id of the application (app_id).
	string app_id = 1;
	// The namespace.
	string namespace = 2;
	// The hostname of the daprd sidecar.
	string hostname = 3;
	// The port of the daprd sidecar.
	int32 port = 4;
}

message ConnectHostResponse {
	// Empty as of now
}

// UnregisterRequest is the message used by the daprd sidecar to unregister itself from the scheduler service.
message UnregisterRequest {
	// The id of the application (app_id).
	string app_id = 1;
	// The namespace.
	string namespace = 2;
	// The hostname of the daprd sidecar.
	string hostname = 3;
	// The port of the daprd sidecar.
	int32 port = 4;
}

message ScheduleJobRequest {
	// The job to be scheduled.
	runtime.v1.Job job = 1;

	// The metadata associated with the job.
	map<string,string> metadata = 2;
}

message ScheduleJobResponse {
	// Empty as of now
}

// GetJobRequest is the message used by the daprd sidecar to delete or get a job.
message GetJobRequest {
	string job_name = 1;

	// The metadata associated with the job.
	map<string,string> metadata = 2;
}

// GetJobResponse is the response message to convey the details of a job.
message GetJobResponse {
	runtime.v1.Job job = 1;
}

// DeleteJobRequest is the message used by the daprd sidecar to delete or get a job.
message DeleteJobRequest {
	string job_name = 1;

	// The metadata associated with the job.
	map<string,string> metadata = 2;
}

message DeleteJobResponse {
	// Empty as of now
}

